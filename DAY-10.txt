public class LinearSearch {
// Linear search method
public static int linearSearch(int[] arr, int target) {
// Iterate through the array
for (int i = 0; i < arr.length; i++) {
if (arr[i] == target) { // Check if current element is the target
return i; // Return the index if found
}
}
return -1; // Return -1 if target is not found
}
public static void main(String[] args) {
7
// Initialize the array and the target element
int[] arr = {10, 23, 45, 60, 12, 5};
int target = 45; // The element we are searching for
// Call linearSearch method
int result = linearSearch(arr, target);
// Check the result and print the output
if (result != -1) {
System.out.println("Element found at index " + result);
} else {
System.out.println("Element not found");
}
}
}
Output:
Element found at index 2


public class BinarySearch {
// Binary search method
public static int binarySearch(int[] array, int key) {
int l = 0; // Lower bound of the search interval
int u = array.length - 1; // Upper bound of the search interval
while (l <= u) {
int mid = (l + u) / 2; // Calculate the middle index
if (array[mid] == key) {
return mid; // Key found at index mid
} else if (array[mid] < key) {
l = mid + 1; // Search in the right half
} else {
u = mid - 1; // Search in the left half
}
}
return -1; // Key not found
}
public static void main(String[] args) {
int[] array = {-11, 4, 6, 9, 33, 45}; // Sorted array
int key = 45; // Key to search for
// Perform binary search
int result = binarySearch(array, key);
// Display the result
if (result != -1) {
10
System.out.println("Found at index " + result);
} else {
System.out.println("Not Found");
}
}
}
Output:
Found at index 5

